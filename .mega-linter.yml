# MegaLinter configuration for winged-bean project
# Documentation: https://megalinter.io/configuration/

# Apply linters to all files by default
APPLY_FIXES: none  # Don't auto-fix in CI, leave that to pre-commit hooks

# Enable specific language flavors
FLAVOR_SUGGESTIONS: false
ENABLE:
  - PYTHON
  - JAVASCRIPT
  - TYPESCRIPT
  - CSHARP
  - TERRAFORM
  - YAML
  - JSON
  - MARKDOWN
  - BASH
  - DOCKERFILE

# Directory structure configuration
DEFAULT_WORKSPACE: /tmp/lint

# Language-specific configurations
PYTHON_DIRECTORY: projects/python
JAVASCRIPT_DIRECTORY: projects/nodejs
TYPESCRIPT_DIRECTORY: projects/nodejs
CSHARP_DIRECTORY: projects/dotnet
TERRAFORM_DIRECTORY: infra/terraform

# Python linters configuration
PYTHON_RUFF_CONFIG_FILE: projects/python/pyproject.toml
PYTHON_BANDIT_CONFIG_FILE: projects/python/pyproject.toml
PYTHON_MYPY_CONFIG_FILE: projects/python/pyproject.toml

# JavaScript/TypeScript configuration
TYPESCRIPT_ES_CONFIG_FILE: projects/nodejs/.eslintrc.js
JAVASCRIPT_ES_CONFIG_FILE: projects/nodejs/.eslintrc.js
TYPESCRIPT_PRETTIER_CONFIG_FILE: projects/nodejs/.prettierrc
JAVASCRIPT_PRETTIER_CONFIG_FILE: projects/nodejs/.prettierrc

# YAML configuration
YAML_YAMLLINT_CONFIG_FILE: .yamllint.yml

# Terraform configuration
TERRAFORM_TFLINT_CONFIG_FILE: infra/terraform/.tflint.hcl

# Security linters
CREDENTIALS_SECRETLINT_DISABLE_ERRORS: false
CREDENTIALS_GITLEAKS_CONFIG_FILE: .gitleaks.toml

# Line length limits (120 characters for modern codebases)
YAML_YAMLLINT_RULE_LINE_LENGTH_MAX: 120
YAML_YAMLLINT_RULE_LINE_LENGTH_LEVEL: warning
MARKDOWN_MARKDOWNLINT_CONFIG_FILE: .markdownlint.yml
BASH_SHELLCHECK_DISABLE_ERRORS: false
CSHARP_DOTNET_FORMAT_ARGUMENTS: --severity info

# File filters - exclude certain directories and files
FILTER_REGEX_EXCLUDE: |
  (ref-projects/.*|
  node_modules/.*|
  \.git/.*|
  \.venv/.*|
  venv/.*|
  __pycache__/.*|
  \.pytest_cache/.*|
  \.coverage/.*|
  build/.*|
  dist/.*|
  target/.*|
  bin/.*|
  obj/.*|
  \.terraform/.*|
  pnpm-lock\.yaml|
  package-lock\.json|
  yarn\.lock|
  Cargo\.lock|
  \.secrets\.baseline)

# Specific linter configurations
PYTHON_RUFF_ARGUMENTS: --config=projects/python/pyproject.toml
PYTHON_BANDIT_ARGUMENTS: -r -f json
TERRAFORM_TERRAFORM_FMT_ARGUMENTS: -diff -check
YAML_YAMLLINT_ARGUMENTS: -d relaxed

# Disable certain linters that are handled by pre-commit or not needed
DISABLE:
  - COPYPASTE  # Can be noisy
  - SPELL      # Can be noisy and handled elsewhere

# Linter-specific disables
DISABLE_LINTERS:
  - PYTHON_PYLINT     # Using ruff instead
  - PYTHON_FLAKE8     # Using ruff instead
  - PYTHON_PYCODESTYLE # Using ruff instead
  - JAVASCRIPT_STANDARD # Using eslint with custom config
  - TYPESCRIPT_STANDARD # Using eslint with custom config

# Reporting configuration
REPORT_OUTPUT_FOLDER: megalinter-reports
UPLOAD_TO_GITHUB_RELEASES: false
FILEIO_REPORTER: false
EMAIL_REPORTER: false

# Performance settings
PARALLEL: true
LOG_LEVEL: INFO
SHOW_ELAPSED_TIME: true

# GitHub integration
GITHUB_STATUS_REPORTER: true
GITHUB_COMMENT_REPORTER: true
UPDATED_SOURCES_REPORTER: false

# Validation settings
VALIDATE_ALL_CODEBASE: false  # Only validate changed files by default
DEFAULT_BRANCH: main

# Pre/post commands
PRE_COMMANDS:
  - command: echo "Starting MegaLinter validation..."
    cwd: workspace

POST_COMMANDS:
  - command: echo "MegaLinter validation completed"
    cwd: workspace
