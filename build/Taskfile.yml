# build/Taskfile.yml
version: '3'

vars:
  VERSION:
    sh: ./get-version.sh
  FULL_VERSION:
    sh: ./get-version.sh
  ARTIFACT_DIR: _artifacts/v{{.VERSION}}

tasks:
  version:
    desc: Show current GitVersion
    cmds:
      - 'echo "Version: {{.VERSION}}"'
      - 'echo "Full Version: {{.FULL_VERSION}}"'

  init-dirs:
    desc: Initialize build artifact directories
    cmds:
      - mkdir -p {{.ARTIFACT_DIR}}/dotnet/{bin,recordings,logs}
      - mkdir -p {{.ARTIFACT_DIR}}/web/{dist,recordings,logs}
      - mkdir -p {{.ARTIFACT_DIR}}/pty/{dist,logs}
      - mkdir -p {{.ARTIFACT_DIR}}/_logs

  build-dotnet:
    desc: "Build .NET projects via Nuke"
    deps: [init-dirs]
    cmds:
      - ./nuke/build.sh Compile 2>&1 | tee {{.ARTIFACT_DIR}}/_logs/dotnet-build.log
      # Adjust copy based on actual Nuke output location
      - cp -r ../bin/Release/net8.0/* {{.ARTIFACT_DIR}}/dotnet/bin/ || true

  build-web:
    desc: "Build web projects"
    deps: [init-dirs]
    dir: ../development/nodejs
    cmds:
      - pnpm run build 2>&1 | tee ../../build/{{.ARTIFACT_DIR}}/_logs/web-build.log
      - cp -r sites/docs/dist/* ../../build/{{.ARTIFACT_DIR}}/web/dist/

  build-pty:
    desc: "Build PTY service"
    deps: [init-dirs]
    dir: ../development/nodejs/pty-service
    cmds:
      # If build script exists, use it; otherwise copy source
      - pnpm run build 2>&1 | tee ../../../build/{{.ARTIFACT_DIR}}/_logs/pty-build.log || cp -r src/* ../../../build/{{.ARTIFACT_DIR}}/pty/dist/

  build-all:
    desc: "Build all components"
    deps:
      - build-dotnet
      - build-web
      - build-pty
    cmds:
      - echo "All builds completed for version {{.VERSION}}"

  clean:
    desc: Clean build artifacts and Task cache
    cmds:
      - rm -rf _artifacts/* .task/
