# Pre-commit configuration for winged-bean multi-language project
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Basic file hygiene and common checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-json
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Secret detection with GitLeaks
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  # Additional secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: .*\.lock$|.*pnpm-lock\.yaml$

  # Python linting and formatting (for projects/python/)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.2
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        files: ^projects/python/.*\.py$
      - id: ruff-format
        files: ^projects/python/.*\.py$


  # JavaScript/TypeScript linting and formatting (for projects/nodejs/)
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.36.0
    hooks:
      - id: eslint
        files: ^projects/nodejs/.*\.(js|ts|jsx|tsx)$
        additional_dependencies:
          - eslint@8.56.0
          - "@typescript-eslint/parser@6.21.0"
          - "@typescript-eslint/eslint-plugin@6.21.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: ^projects/nodejs/.*\.(js|ts|jsx|tsx|json|md)$
        exclude: ^projects/nodejs/.*\.lock$|^projects/nodejs/pnpm-lock\.yaml$

  # Terraform formatting and validation (for infra/terraform/)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.100.1
    hooks:
      - id: terraform_fmt
        files: ^infra/terraform/.*\.tf$
      - id: terraform_validate
        files: ^infra/terraform/.*\.tf$
      - id: terraform_tflint
        files: ^infra/terraform/.*\.tf$

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: [-d, relaxed]
        files: \.(yaml|yml)$
        exclude: ^projects/nodejs/pnpm-lock\.yaml$|^ref-projects/

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: ^ref-projects/

  # .NET formatting and analysis (for projects/dotnet/)
  - repo: local
    hooks:
      - id: dotnet-format-whitespace
        name: dotnet format (whitespace)
        entry: sh
        args: ['-c', 'if command -v dotnet >/dev/null 2>&1; then cd projects/dotnet && find . -name "*.sln" -o -name "*.csproj" | head -1 | xargs -I {} dotnet format {} whitespace --verbosity minimal; else echo "dotnet CLI not found, skipping format"; fi']
        language: system
        files: ^projects/dotnet/.*\.(cs|vb|fs)$
        pass_filenames: false
        require_serial: true
      - id: dotnet-format-style
        name: dotnet format (style)
        entry: sh
        args: ['-c', 'if command -v dotnet >/dev/null 2>&1; then cd projects/dotnet && find . -name "*.sln" -o -name "*.csproj" | head -1 | xargs -I {} dotnet format {} style --verbosity minimal; else echo "dotnet CLI not found, skipping format"; fi']
        language: system
        files: ^projects/dotnet/.*\.(cs|vb|fs)$
        pass_filenames: false
        require_serial: true

  # JetBrains CLI tools (code inspection and cleanup)
  - repo: local
    hooks:
      - id: jetbrains-cleanup
        name: JetBrains Code Cleanup
        entry: sh
        args: ['-c', 'if command -v jb >/dev/null 2>&1; then jb cleanupcode --profile="Built-in: Full Cleanup" projects/dotnet/ --verbosity=WARN; else echo "JetBrains CLI (jb) not found, skipping cleanup"; fi']
        language: system
        files: ^projects/dotnet/.*\.(cs|vb|fs)$
        pass_filenames: false
        require_serial: true
      - id: jetbrains-inspect
        name: JetBrains Code Inspection
        entry: sh
        args: ['-c', 'if command -v jb >/dev/null 2>&1; then jb inspectcode projects/dotnet/ --build --format=json --output=.jetbrains-inspection-results.json --verbosity=WARN; else echo "JetBrains CLI (jb) not found, skipping inspection"; fi']
        language: system
        files: ^projects/dotnet/.*\.(cs|vb|fs|sln|csproj|vbproj|fsproj)$
        pass_filenames: false
        require_serial: true

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.11.0.1
    hooks:
      - id: shellcheck
        args: ['-e', 'SC1091']  # Disable "not following" warnings

  # Check for common security issues in various languages
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        files: ^projects/python/.*\.py$
        args: ['-r', '-f', 'json']
        exclude: ^projects/python/.*/tests/.*\.py$

# Configuration for specific tools
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0