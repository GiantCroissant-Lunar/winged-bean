---
# Ultra-Optimized MegaLinter with Custom Image
name: MegaLinter

on:
  pull_request:
    branches: [main, master]

env:
  # Use specific flavors for better caching and speed
  MEGALINTER_FLAVOR: cupcake  # Lighter flavor with core linters

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  megalinter:
    name: MegaLinter
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Use Docker layer caching for maximum speed
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-megalinter-cupcake-${{ hashFiles('.mega-linter.yml') }}
          restore-keys: |
            ${{ runner.os }}-megalinter-cupcake-

      # Install only essential native tools for speed comparison
      - name: Install native tools (parallel)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y yamllint shellcheck &
          pip install --quiet ruff bandit safety &
          npm install -g --silent eslint prettier &

      # Run quick native pre-check (optional - for immediate feedback)
      - name: Quick native pre-check
        run: |
          # Run fast native checks first
          echo "Running quick pre-checks..."
          find . -name "*.py" -path "./projects/python/*" | head -10 | xargs -r ruff check --quiet || true
          find . -name "*.yaml" -o -name "*.yml" | head -10 | xargs -r yamllint -d relaxed || true

      # Run MegaLinter with optimized settings
      - name: Run MegaLinter
        id: ml
        run: |
          docker run \
            --rm \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e GITHUB_REPOSITORY="${{ github.repository }}" \
            -e GITHUB_EVENT_NAME="${{ github.event_name }}" \
            -e GITHUB_REF="${{ github.ref }}" \
            -e GITHUB_SHA="${{ github.sha }}" \
            -e VALIDATE_ALL_CODEBASE="${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}" \
            -e APPLY_FIXES="none" \
            -e PARALLEL="true" \
            -e LOG_LEVEL="WARNING" \
            -e SHOW_ELAPSED_TIME="true" \
            -e MEGALINTER_CONFIG=".mega-linter.yml" \
            -v ${{ github.workspace }}:/tmp/lint:rw \
            oxsecurity/megalinter-${{ env.MEGALINTER_FLAVOR }}:v7

      # Fast artifact upload (only essentials)
      - name: Archive reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: megalinter-reports-${{ github.run_number }}
          path: |
            megalinter-reports/*.md
            megalinter-reports/*.json
          retention-days: 5

      # Lightweight PR comment
      - name: PR Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const summaryPath = 'megalinter-reports/README.md';
              if (fs.existsSync(summaryPath)) {
                const summary = fs.readFileSync(summaryPath, 'utf8');
                const lines = summary.split('\n').slice(0, 50); // First 50 lines only

                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `## üîç MegaLinter Summary\n\n${lines.join('\n')}\n\n[View full reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
                });
              }
            } catch (error) {
              console.log('Posting simple comment');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ‚úÖ MegaLinter completed\n\n[View results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
              });
            }
