---
# OpenCode AI Agent Integration
name: OpenCode

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

concurrency:
  group: opencode-${{ github.event.issue.number || github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  opencode:
    name: OpenCode Agent
    if: |
      (github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment') &&
      (contains(github.event.comment.body, '/oc') || contains(github.event.comment.body, '/opencode'))
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run OpenCode
        uses: sst/opencode/github@latest
        env:
          # Use Grok Code model (free tier)
          # Alternative: ANTHROPIC_API_KEY for Claude models
          OPENCODE_API_KEY: ${{ secrets.OPENCODE_API_KEY }}
        with:
          model: opencode/claude-sonnet-4
          share: true

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `‚ùå OpenCode execution failed. Please check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`;

            if (context.eventName === 'issue_comment') {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            } else if (context.eventName === 'pull_request_review_comment') {
              github.rest.pulls.createReplyForReviewComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                comment_id: context.payload.comment.id,
                body: comment
              });
            }
