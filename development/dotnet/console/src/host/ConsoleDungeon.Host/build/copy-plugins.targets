<Project>
  <Target Name="CopyPlugins" AfterTargets="Build">
    <Message Importance="high" Text="========================================" />
    <Message Importance="high" Text="Copying plugin assemblies..." />
    <Message Importance="high" Text="========================================" />

    <ItemGroup>
      <!-- Get all plugin DLLs and dependencies -->
      <PluginFiles Include="../../plugins/**/bin/$(Configuration)/$(TargetFramework)/*.dll" />
      <PluginFiles Include="../../plugins/**/bin/$(Configuration)/$(TargetFramework)/*.pdb" />
      <PluginFiles Include="../../plugins/**/bin/$(Configuration)/$(TargetFramework)/.plugin.json" />

      <!-- Exclude Analytics and Diagnostics plugins (require Google.Cloud.Firestore which causes runtime errors) -->
      <PluginFiles Remove="../../plugins/WingedBean.Plugins.Analytics/bin/$(Configuration)/$(TargetFramework)/*.dll" />
      <PluginFiles Remove="../../plugins/WingedBean.Plugins.Analytics/bin/$(Configuration)/$(TargetFramework)/*.pdb" />
      <PluginFiles Remove="../../plugins/WingedBean.Plugins.Diagnostics/bin/$(Configuration)/$(TargetFramework)/*.dll" />
      <PluginFiles Remove="../../plugins/WingedBean.Plugins.Diagnostics/bin/$(Configuration)/$(TargetFramework)/*.pdb" />
    </ItemGroup>

    <!-- Create plugins directory -->
    <MakeDir Directories="$(OutDir)plugins/" Condition="!Exists('$(OutDir)plugins/')" />

    <!-- Copy plugins to preserve directory structure for manifests -->
    <Copy
      SourceFiles="@(PluginFiles)"
      DestinationFiles="@(PluginFiles->'$(OutDir)plugins/%(RecursiveDir)%(Filename)%(Extension)')"
      SkipUnchangedFiles="true"
      OverwriteReadOnlyFiles="true" />

    <Message Importance="high" Text="Copied @(PluginFiles->Count()) plugin files to $(OutDir)plugins/" />

    <!-- Remove Analytics and Diagnostics plugin directories if they exist -->
    <RemoveDir Directories="$(OutDir)plugins/WingedBean.Plugins.Analytics" Condition="Exists('$(OutDir)plugins/WingedBean.Plugins.Analytics')" />
    <RemoveDir Directories="$(OutDir)plugins/WingedBean.Plugins.Diagnostics" Condition="Exists('$(OutDir)plugins/WingedBean.Plugins.Diagnostics')" />
    <Message Importance="high" Text="Excluded Analytics and Diagnostics plugins (Google.Cloud.Firestore dependency)" Condition="Exists('$(OutDir)plugins/')" />
  </Target>

  <Target Name="CleanPlugins" AfterTargets="Clean">
    <Message Importance="high" Text="Cleaning plugin directory..." />
    <RemoveDir Directories="$(OutDir)plugins/" Condition="Exists('$(OutDir)plugins/')" />
  </Target>
</Project>
