[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "winged-bean-python"
description = "Python components for winged-bean project"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "winged-bean team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
]

[project.scripts]
# Pre-commit hooks (per R-ISS-030)
validate-issue-dependencies = "scripts.validate_issue_dependencies:main"
# GitHub Actions workflow scripts (per R-PRC-050)
validate-pr-issue-link = "scripts.workflows.validate_pr_issue_link:main"
validate-issue-deps-workflow = "scripts.workflows.validate_issue_dependencies:main"
handle-agent-failure = "scripts.workflows.handle_agent_failure:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[tool.setuptools_scm]
write_to = "src/winged_bean/_version.py"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "S",  # flake8-bandit (security)
]
ignore = [
    "E501",  # line too long, handled by black
    "S101",  # use of assert detected
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101"]  # Allow assert in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src/winged_bean --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test
